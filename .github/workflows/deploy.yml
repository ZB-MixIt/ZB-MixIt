name: Build & Deploy to EC2

on:
  push:
    branches:
      - develop

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Build with Gradle
        run: ./gradlew clean bootJar

      - name: Copy JAR to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          source: build/libs/*.jar
          target: /home/${{ secrets.EC2_USER }}/mixit/mixit.jar

      # 5) EC2에서 기존 프로세스 종료 & 새 프로세스 실행
      - name: Restart Spring Boot on EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            #!/bin/bash
            APP_JAR="/home/${{ secrets.EC2_USER }}/mixit/mixit.jar"
            # (1) 이미 실행 중인 프로세스 있으면 종료
            if pgrep -f "$APP_JAR"; then
              echo "Stopping existing application..."
              pkill -f "$APP_JAR"
              sleep 5
            fi
            # (2) 로그 디렉토리 생성
            mkdir -p /home/${{ secrets.EC2_USER }}/app/logs
            # (3) 백그라운드로 앱 실행
            echo "Starting application..."
            nohup java -jar "$APP_JAR" \
              --spring.profiles.active=prod \
              > /home/${{ secrets.EC2_USER }}/app/logs/app.log 2>&1 &
            echo "Application started."